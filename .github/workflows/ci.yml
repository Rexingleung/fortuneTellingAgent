name: Fortune Telling Agent CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x, 21.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Validate data files
      run: npm run validate-data
    
    - name: Run linting
      run: npm run lint --if-present
    
    - name: Check formatting
      run: npm run format --check --if-present
    
    - name: Build project
      run: npm run build
    
    - name: Test CLI functionality
      run: |
        echo "Testing CLI help command"
        timeout 5s npm run cli <<< "help" || true
        echo "CLI test completed"

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security audit
      run: npm audit --audit-level high
    
    - name: Check for vulnerabilities
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - run: npm ci
    - run: npm audit --audit-level moderate

  data-validation:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Validate all data files
      run: npm run validate-data
    
    - name: Check data file sizes
      run: |
        echo "Data file sizes:"
        du -sh src/mastra/data/*.json
        
    - name: Verify critical data integrity
      run: |
        echo "Checking critical data structures..."
        node -e "
        const fs = require('fs');
        const path = require('path');
        
        // Check astrology data
        const astro = JSON.parse(fs.readFileSync('src/mastra/data/astrology.json', 'utf8'));
        console.log('✅ Astrology signs:', astro.westernAstrology?.zodiacSigns?.length || 'Missing');
        console.log('✅ Chinese animals:', astro.chineseAstrology?.animals?.length || 'Missing');
        
        // Check tarot data
        const tarot = JSON.parse(fs.readFileSync('src/mastra/data/tarot.json', 'utf8'));
        console.log('✅ Major Arcana:', tarot.majorArcana?.length || 'Missing');
        
        // Check I Ching data
        const iching = JSON.parse(fs.readFileSync('src/mastra/data/iching.json', 'utf8'));
        console.log('✅ I Ching hexagrams:', iching.hexagrams?.length || 'Missing');
        "

  documentation:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Check README completeness
      run: |
        echo "Checking documentation completeness..."
        
        # Check if README has all required sections
        if grep -q "## 🌟 Features" README.md; then
          echo "✅ Features section found"
        else
          echo "❌ Features section missing"
          exit 1
        fi
        
        if grep -q "## 🚀 Getting Started" README.md; then
          echo "✅ Getting Started section found"
        else
          echo "❌ Getting Started section missing"
          exit 1
        fi
        
        if grep -q "## 🛠️ Available Tools" README.md; then
          echo "✅ Available Tools section found"
        else
          echo "❌ Available Tools section missing"
          exit 1
        fi
        
        echo "📚 Documentation validation completed"
    
    - name: Check for example usage
      run: |
        if grep -q "Usage Examples" README.md; then
          echo "✅ Usage examples found"
        else
          echo "⚠️  Consider adding more usage examples"
        fi

  deploy-check:
    runs-on: ubuntu-latest
    needs: [test, security, data-validation]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build for production
      run: npm run build
    
    - name: Check production readiness
      run: |
        echo "🚀 Production readiness check"
        echo "✅ Build successful"
        echo "✅ Dependencies installed"
        echo "✅ Data validation passed"
        echo "✅ Security audit passed"
        echo "🎉 Ready for deployment!"
